{"version":3,"sources":["node_modules/three-orbitcontrols/OrbitControls.js","js/three/Viz1.js"],"names":["Viz","index","c1","document","getElementById","container1","parentNode","BCR1","getBoundingClientRect","WIDTH","width","HEIGHT","height","VIEW_ANGLE","ASPECT","NEAR","FAR","renderer1","THREE","WebGLRenderer","antialias","canvas","camera1","PerspectiveCamera","position","set","scene","Scene","background","Color","add","setSize","controls1","OrbitControls","enabled","addEventListener","constellations","length","rotation","z","EARTH_TILT","DEG","starField","then","makeStarField","sunMap","TextureLoader","load","images","sunMaterial","SpriteMaterial","map","depthWrite","sun","Sprite","scale","SUN_RADIUS","earth","Mesh","SphereGeometry","EARTH_RADIUS","invert","northPole","CylinderGeometry","MeshBasicMaterial","color","earthTilt","Group","rotateOnWorldAxis","Vector3","moon","MOON_RADIUS","moonOrbit","TorusGeometry","MOON_DISTANCE","PALETTE","MOON","x","Math","PI","moonTilt","normalize","groupEarthMoon","earthOrbit","EARTH_DISTANCE","ECLIPTIC","side","DoubleSide","light","DirectionalLight","targetObject","Object3D","target","gridXZ","GridHelper","update","positions","hide","sunLong","Sun","longitude","moonLong","Moon","visible","grid","orbits","stars","sin","cos","y","Earth","rotationAngle","lookAt","rotateY","render","onResize","aspect","updateProjectionMatrix"],"mappings":"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":"Viz1.b9b310ca.js","sourceRoot":"..","sourcesContent":["/* three-orbitcontrols addendum */ var THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n/* three-orbitcontrols addendum */ module.exports = exports.default = THREE.OrbitControls;\n","import {\r\n  DEG,\r\n  EARTH_DISTANCE,\r\n  EARTH_RADIUS,\r\n  EARTH_TILT,\r\n  MOON_DISTANCE,\r\n  MOON_RADIUS,\r\n  SUN_RADIUS,\r\n  PALETTE\r\n} from '../constants.js';\r\nimport makeConstellationLines from './makeConstellationLines.js';\r\n// import makeStarField from '/js/three/starField.js';\r\n\r\nimport LambertTextureMaterial from './LambertTextureMaterial.js';\r\n\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'three-orbitcontrols';\r\n\r\nimport images from '../images';\r\n\r\nexport default function Viz(index) {\r\n  const c1 = document.getElementById(`c${index}`);\r\n  const container1 = c1.parentNode;\r\n  const BCR1 = container1.getBoundingClientRect();\r\n\r\n  // Set the scene size.\r\n  const WIDTH = BCR1.width;\r\n  const HEIGHT = BCR1.height;\r\n\r\n  // Set some camera attributes.\r\n  const VIEW_ANGLE = 15;\r\n  const ASPECT = WIDTH / HEIGHT;\r\n  const NEAR = 0.1;\r\n  const FAR = 10000;\r\n\r\n  // Create a WebGL renderer, camera\r\n  // and a scene\r\n  const renderer1 = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    canvas: c1\r\n  });\r\n\r\n  const camera1 = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\r\n\r\n  camera1.position.set(0, 150, 400);\r\n\r\n  const scene = new THREE.Scene();\r\n\r\n  scene.background = new THREE.Color(0x111111);\r\n\r\n  // Add the camera to the scene.\r\n  scene.add(camera1);\r\n\r\n  // Start the renderer.\r\n  renderer1.setSize(WIDTH, HEIGHT);\r\n\r\n  // Attach the renderer-supplied\r\n  // DOM element.\r\n\r\n  var controls1 = new OrbitControls(camera1, container1);\r\n  controls1.enabled = false;\r\n\r\n  c1.addEventListener('mouseenter', () => {\r\n    controls1.enabled = true;\r\n  });\r\n  c1.addEventListener('mouseleave', () => {\r\n    controls1.enabled = false;\r\n  });\r\n\r\n  const constellations = makeConstellationLines(camera1.position.length());\r\n  constellations.rotation.z = -EARTH_TILT * DEG;\r\n  scene.add(constellations);\r\n\r\n  let starField;\r\n\r\n  import('/js/three/starField.js').then(({ makeStarField }) => {\r\n    starField = makeStarField(camera1.position.length());\r\n    starField.rotation.z = -EARTH_TILT * DEG;\r\n    scene.add(starField);\r\n  });\r\n\r\n  var sunMap = new THREE.TextureLoader().load(images['sun.png']);\r\n  var sunMaterial = new THREE.SpriteMaterial({\r\n    map: sunMap,\r\n    depthWrite: false\r\n  });\r\n  var sun = new THREE.Sprite(sunMaterial);\r\n  sun.scale.set(SUN_RADIUS * 4, SUN_RADIUS * 4, 1);\r\n  scene.add(sun);\r\n\r\n  var earth = new THREE.Mesh(\r\n    new THREE.SphereGeometry(EARTH_RADIUS, 30, 30),\r\n    LambertTextureMaterial(images['earth-day.jpg'], images['earth-night.jpg'], {\r\n      invert: true\r\n    })\r\n  );\r\n  scene.add(earth);\r\n\r\n  const northPole = new THREE.Mesh(\r\n    new THREE.CylinderGeometry(0.1, 0.1, 20, 8),\r\n    new THREE.MeshBasicMaterial({ color: 0xffffff })\r\n  );\r\n  scene.add(northPole);\r\n\r\n  const earthTilt = new THREE.Group();\r\n  earthTilt.add(earth);\r\n  earthTilt.add(northPole);\r\n  earthTilt.rotateOnWorldAxis(new THREE.Vector3(0, 0, 1), -EARTH_TILT * DEG);\r\n\r\n  var moon = new THREE.Mesh(\r\n    new THREE.SphereGeometry(MOON_RADIUS, 30, 30),\r\n    LambertTextureMaterial(images['moon-day.jpg'], images['moon-night.jpg'], {\r\n      invert: true\r\n    })\r\n  );\r\n\r\n  var moonOrbit = new THREE.Mesh(\r\n    new THREE.TorusGeometry(MOON_DISTANCE, 0.1, 16, 100),\r\n    new THREE.MeshBasicMaterial({\r\n      color: PALETTE.MOON\r\n    })\r\n  );\r\n\r\n  moonOrbit.rotation.x = Math.PI / 2;\r\n\r\n  const moonTilt = new THREE.Group();\r\n  moonTilt.add(moon);\r\n  moonTilt.add(moonOrbit);\r\n  moonTilt.rotateOnWorldAxis(new THREE.Vector3(1, 0, 1).normalize(), 5.1 * DEG);\r\n\r\n  var groupEarthMoon = new THREE.Group();\r\n  groupEarthMoon.add(earthTilt);\r\n  groupEarthMoon.add(moonTilt);\r\n  scene.add(groupEarthMoon);\r\n\r\n  var earthOrbit = new THREE.Mesh(\r\n    new THREE.TorusGeometry(EARTH_DISTANCE, 0.1, 16, 100),\r\n    new THREE.MeshBasicMaterial({\r\n      color: PALETTE.ECLIPTIC,\r\n      side: THREE.DoubleSide\r\n    })\r\n  );\r\n  earthOrbit.rotation.x = Math.PI / 2;\r\n  scene.add(earthOrbit);\r\n\r\n  var light = new THREE.DirectionalLight(0xffffff, 1);\r\n  var targetObject = new THREE.Object3D();\r\n  targetObject.position.set(0, 0, 0);\r\n  scene.add(targetObject);\r\n\r\n  light.target = groupEarthMoon;\r\n  light.position.set(0, 0, 0);\r\n  scene.add(light);\r\n\r\n  var gridXZ = new THREE.GridHelper(100, 10, 0x666666, 0x333333);\r\n  gridXZ.position.set(0, -SUN_RADIUS, 0);\r\n  scene.add(gridXZ);\r\n\r\n  // var gridXY = new THREE.GridHelper(100, 10, 0x666666, 0x333333);\r\n  // gridXY.position.set(0, 0, -50);\r\n  // gridXY.rotation.x = Math.PI / 2;\r\n  // scene.add(gridXY);\r\n\r\n  // var gridYZ = new THREE.GridHelper(100, 10, 0x666666, 0x333333);\r\n  // gridYZ.position.set(-50, 0, 0);\r\n  // gridYZ.rotation.z = Math.PI / 2;\r\n  // scene.add(gridYZ);\r\n\r\n  return {\r\n    update({ positions, hide }) {\r\n      const sunLong = positions.Sun.longitude * DEG + Math.PI;\r\n      const moonLong = positions.Moon.longitude * DEG;\r\n\r\n      gridXZ.visible = !hide.grid;\r\n      constellations.visible = !hide.constellations;\r\n      moonOrbit.visible = !hide.orbits;\r\n      earthOrbit.visible = !hide.orbits;\r\n      if (starField) starField.visible = !hide.stars;\r\n\r\n      groupEarthMoon.position.x = EARTH_DISTANCE * Math.sin(sunLong);\r\n      groupEarthMoon.position.z = EARTH_DISTANCE * Math.cos(sunLong);\r\n      earth.rotation.y = positions.Earth.rotationAngle * DEG + Math.PI * 1.5;\r\n\r\n      // light.target = groupEarthMoon;\r\n      // light.position.set(groupEarthMoon.position);\r\n\r\n      moon.position.x = MOON_DISTANCE * Math.sin(moonLong);\r\n      moon.position.z = MOON_DISTANCE * Math.cos(moonLong);\r\n      moon.lookAt(groupEarthMoon.position);\r\n      moon.rotateY(-Math.PI / 2);\r\n\r\n      renderer1.render(scene, camera1);\r\n\r\n      // required if controls.enableDamping or controls.autoRotate are set to true\r\n      controls1.update();\r\n    },\r\n\r\n    onResize() {\r\n      const BCR1 = container1.getBoundingClientRect();\r\n\r\n      // Set the scene size.\r\n      const WIDTH = BCR1.width;\r\n      const HEIGHT = BCR1.height;\r\n\r\n      camera1.aspect = WIDTH / HEIGHT;\r\n      camera1.updateProjectionMatrix();\r\n\r\n      renderer1.setSize(WIDTH, HEIGHT);\r\n    }\r\n  };\r\n}\r\n"]}