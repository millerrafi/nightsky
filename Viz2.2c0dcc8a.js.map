{"version":3,"sources":["js/three/makeRing.js","js/three/Viz2.js"],"names":["DEG","Math","PI","makeRing","distance","color","width","front","back","obj","THREE","Object3D","frontMesh","Mesh","SphereGeometry","MeshBasicMaterial","side","FrontSide","opacity","transparent","backMesh","BackSide","add","Viz","index","canvas","document","getElementById","container","parentNode","BCR","getBoundingClientRect","WIDTH","HEIGHT","height","VIEW_ANGLE","ASPECT","NEAR","FAR","renderer","WebGLRenderer","antialias","camera","PerspectiveCamera","position","set","scene","Scene","background","Color","setSize","controls","OrbitControls","enabled","addEventListener","sun","Sprite","SpriteMaterial","map","TextureLoader","load","images","depthWrite","scale","SUN_RADIUS","earth","EARTH_RADIUS","northPole","CylinderGeometry","eclipticPlane","EARTH_DISTANCE","PALETTE","ECLIPTIC","moon","MOON_RADIUS","moonOrbit","MOON","moonTilt","rotateOnWorldAxis","Vector3","normalize","ecliptic","EARTH_TILT","light","DirectionalLight","targetObject","target","graticule","material","constellations","equator","EQUATOR","then","makeStarField","maxSize","dot","scalePoint","mag","exp","fadePoint","update","positions","hide","sunLong","Sun","longitude","moonLong","Moon","visible","orbits","x","sin","z","cos","rotation","y","Earth","rotationAngle","lookAt","rotateY","render","onResize","BCR1","aspect","updateProjectionMatrix"],"mappings":"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","file":"Viz2.2c0dcc8a.js","sourceRoot":"..","sourcesContent":["import * as THREE from 'three';\r\n\r\nconst DEG = Math.PI / 180;\r\n\r\nexport default function makeRing({\r\n  distance,\r\n  color,\r\n  width = 0.5 * DEG,\r\n  front = {},\r\n  back = {}\r\n}) {\r\n  const obj = new THREE.Object3D();\r\n\r\n  const frontMesh = new THREE.Mesh(\r\n    new THREE.SphereGeometry(\r\n      distance,\r\n      128,\r\n      2,\r\n      0,\r\n      Math.PI * 2,\r\n      Math.PI / 2 - width / 2,\r\n      width\r\n    ),\r\n    new THREE.MeshBasicMaterial({\r\n      color,\r\n      side: THREE.FrontSide,\r\n      opacity: 0.5,\r\n      transparent: true,\r\n      ...front\r\n    })\r\n  );\r\n\r\n  const backMesh = new THREE.Mesh(\r\n    new THREE.SphereGeometry(\r\n      distance,\r\n      128,\r\n      2,\r\n      0,\r\n      Math.PI * 2,\r\n      Math.PI / 2 - width / 2,\r\n      width\r\n    ),\r\n    new THREE.MeshBasicMaterial({\r\n      color,\r\n      side: THREE.BackSide,\r\n      ...back\r\n    })\r\n  );\r\n\r\n  obj.add(frontMesh);\r\n  obj.add(backMesh);\r\n  return obj;\r\n}\r\n","import {\r\n  DEG,\r\n  EARTH_DISTANCE,\r\n  EARTH_RADIUS,\r\n  MOON_RADIUS,\r\n  EARTH_TILT,\r\n  PALETTE,\r\n  SUN_RADIUS\r\n} from '../constants.js';\r\nimport * as THREE from 'three';\r\nimport makeGraticule from '../d3/graticule.js';\r\nimport makeConstellationLines from './makeConstellationLines.js';\r\n// import makeStarField from '/js/three/starField.js';\r\nimport LambertTextureMaterial from './LambertTextureMaterial.js';\r\n\r\nimport images from '../images';\r\nimport makeRing from './makeRing.js';\r\n\r\nexport default function Viz(index) {\r\n  const canvas = document.getElementById(`c${index}`);\r\n  const container = canvas.parentNode;\r\n  const BCR = container.getBoundingClientRect();\r\n\r\n  // Set the scene size.\r\n  const WIDTH = BCR.width;\r\n  const HEIGHT = BCR.height;\r\n\r\n  // Set some camera attributes.\r\n  const VIEW_ANGLE = 15;\r\n  const ASPECT = WIDTH / HEIGHT;\r\n  const NEAR = 0.1;\r\n  const FAR = 10000;\r\n\r\n  // Create a WebGL renderer, camera\r\n  // and a scene\r\n  const renderer = new THREE.WebGLRenderer({\r\n    antialias: true,\r\n    canvas: canvas\r\n  });\r\n\r\n  const camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\r\n  camera.position.set(0, 150, 400);\r\n  const scene = new THREE.Scene();\r\n  scene.background = new THREE.Color(0x111111);\r\n  scene.add(camera);\r\n  renderer.setSize(WIDTH, HEIGHT);\r\n\r\n  var controls = new THREE.OrbitControls(camera, container);\r\n  controls.enabled = false;\r\n\r\n  canvas.addEventListener('mouseenter', () => {\r\n    controls.enabled = true;\r\n  });\r\n\r\n  canvas.addEventListener('mouseleave', () => {\r\n    controls.enabled = false;\r\n  });\r\n\r\n  var sun = new THREE.Sprite(\r\n    new THREE.SpriteMaterial({\r\n      map: new THREE.TextureLoader().load(images['sun.png']),\r\n      depthWrite: false\r\n    })\r\n  );\r\n  sun.scale.set(SUN_RADIUS * 2, SUN_RADIUS * 2, 1);\r\n  scene.add(sun);\r\n\r\n  var earth = new THREE.Mesh(\r\n    new THREE.SphereGeometry(EARTH_RADIUS, 30, 30),\r\n    LambertTextureMaterial(images['earth-day.jpg'], images['earth-night.jpg'])\r\n  );\r\n  scene.add(earth);\r\n\r\n  const northPole = new THREE.Mesh(\r\n    new THREE.CylinderGeometry(0.1, 0.1, 20, 8),\r\n    new THREE.MeshBasicMaterial({ color: 0xffffff })\r\n  );\r\n  scene.add(northPole);\r\n\r\n  var eclipticPlane = makeRing({\r\n    distance: EARTH_DISTANCE,\r\n    width: 1 * DEG,\r\n    color: PALETTE.ECLIPTIC\r\n  });\r\n\r\n  var moon = new THREE.Mesh(\r\n    new THREE.SphereGeometry(MOON_RADIUS * 2, 30, 30),\r\n    LambertTextureMaterial(images['moon-day.jpg'], images['moon-night.jpg'])\r\n  );\r\n\r\n  var moonOrbit = makeRing({\r\n    distance: EARTH_DISTANCE,\r\n    color: PALETTE.MOON\r\n  });\r\n\r\n  const moonTilt = new THREE.Object3D();\r\n  moonTilt.add(moon);\r\n  moonTilt.add(moonOrbit);\r\n\r\n  moonTilt.rotateOnWorldAxis(new THREE.Vector3(1, 0, 1).normalize(), 5.1 * DEG);\r\n\r\n  // eclipticPlane.rotation.x = Math.PI / 2;\r\n\r\n  const ecliptic = new THREE.Object3D();\r\n  ecliptic.add(sun);\r\n  ecliptic.add(moonTilt);\r\n  ecliptic.add(eclipticPlane);\r\n  ecliptic.rotateOnWorldAxis(new THREE.Vector3(0, 0, 1), -EARTH_TILT * DEG);\r\n  scene.add(ecliptic);\r\n\r\n  var light = new THREE.DirectionalLight(0xffffff, 1);\r\n  var targetObject = new THREE.Object3D();\r\n  targetObject.position.set(0, 0, 0);\r\n  scene.add(targetObject);\r\n\r\n  light.target = sun;\r\n  light.position.set(0, 0, 0);\r\n  scene.add(light);\r\n\r\n  const graticule = makeGraticule(EARTH_DISTANCE, 0x666666, {\r\n    material: { opacity: 0.1 }\r\n  });\r\n  scene.add(graticule);\r\n\r\n  const constellations = makeConstellationLines(EARTH_DISTANCE);\r\n  scene.add(constellations);\r\n\r\n  var equator = makeRing({\r\n    distance: EARTH_DISTANCE,\r\n    width: 2 * DEG,\r\n    color: PALETTE.EQUATOR\r\n  });\r\n\r\n  scene.add(equator);\r\n\r\n  import('/js/three/starField.js').then(({ makeStarField }) => {\r\n    scene.add(\r\n      makeStarField(EARTH_DISTANCE, {\r\n        maxSize: 1,\r\n        dot: true,\r\n        // additive: true,\r\n        scalePoint: mag => 3 * Math.exp(-0.2 * mag),\r\n        fadePoint: mag => Math.exp(-8 * (mag - 2))\r\n        // scalePoint: mag => 2\r\n      })\r\n    );\r\n  });\r\n\r\n  return {\r\n    update({ positions, hide }) {\r\n      const sunLong = positions.Sun.longitude * DEG + Math.PI;\r\n      const moonLong = positions.Moon.longitude * DEG + Math.PI;\r\n\r\n      constellations.visible = !hide.constellations;\r\n      moonOrbit.visible = !hide.orbits;\r\n      eclipticPlane.visible = !hide.orbits;\r\n      graticule.visible = !hide.equator;\r\n      equator.visible = !hide.equator;\r\n\r\n      sun.position.x = EARTH_DISTANCE * Math.sin(sunLong);\r\n      sun.position.z = EARTH_DISTANCE * Math.cos(sunLong);\r\n\r\n      // pi/2 correction for shader texture\r\n      earth.rotation.y = positions.Earth.rotationAngle * DEG + Math.PI * 0.5;\r\n\r\n      moon.position.x = EARTH_DISTANCE * Math.sin(moonLong);\r\n      moon.position.z = EARTH_DISTANCE * Math.cos(moonLong);\r\n      moon.lookAt(earth.position);\r\n      moon.rotateY(-Math.PI / 2);\r\n\r\n      renderer.render(scene, camera);\r\n      controls.update();\r\n    },\r\n\r\n    onResize() {\r\n      const BCR1 = container.getBoundingClientRect();\r\n      const WIDTH = BCR1.width;\r\n      const HEIGHT = BCR1.height;\r\n\r\n      camera.aspect = WIDTH / HEIGHT;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(WIDTH, HEIGHT);\r\n    }\r\n  };\r\n}\r\n"]}